<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mamba.popidea.dao.QuestionBeanMapper" >
  <resultMap id="BaseResultMap" type="com.mamba.popidea.model.QuestionBean" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="question_title" property="questionTitle" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.mamba.popidea.model.QuestionBean" extends="BaseResultMap" >
    <result column="question_content" property="questionContent" jdbcType="LONGVARCHAR" />
  </resultMap>

  <resultMap id="QuestionVoMap" type="com.mamba.popidea.model.vo.QuestionVO" extends="ResultMapWithBLOBs" >
    <result column="favicon" property="favicon" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, question_title, status, create_time, update_time
  </sql>
  <sql id="Blob_Column_List" >
    question_content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from question
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from question
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.mamba.popidea.model.QuestionBean" >
    insert into question (id, user_id, question_title, 
      status, create_time, update_time, 
      question_content)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{questionTitle,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{questionContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.mamba.popidea.model.QuestionBean" >
    insert into question
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="questionTitle != null" >
        question_title,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="questionContent != null" >
        question_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="questionTitle != null" >
        #{questionTitle,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="questionContent != null" >
        #{questionContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mamba.popidea.model.QuestionBean" >
    update question
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="questionTitle != null" >
        question_title = #{questionTitle,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="questionContent != null" >
        question_content = #{questionContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mamba.popidea.model.QuestionBean" >
    update question
    set user_id = #{userId,jdbcType=BIGINT},
      question_title = #{questionTitle,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      question_content = #{questionContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mamba.popidea.model.QuestionBean" >
    update question
    set user_id = #{userId,jdbcType=BIGINT},
      question_title = #{questionTitle,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>


  <select id="QuestionBean" parameterType="java.lang.Long" resultType="com.mamba.popidea.model.QuestionBean">
       select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
       from qusetion where id=#{id} and `status`=1
  </select>

  <select id="findByKeyWord" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
      select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
      from question
      where (question_title like concat("%",#{keyword},"%") or question_content like concat("%",#{keyword},"%")) and `status`=1
  </select>

  <select id="getQuestionDetailInfo" parameterType="java.lang.Long" resultMap="QuestionVoMap">
    select a.*,b.favicon,b.nick_name from question a
      left join `user` b on a.user_id=b.id where a.id=#{id} and  a.`status`=1
  </select>

  <select id="findListByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
       select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
       from question where user_id=#{userId} and `status`=1
  </select>

  <select id="findQuestionByKeyword" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from question where `status`=1
    <set>
      <if test="keyword != null" >
        and `name` like concat("%",#{keyword},"%")
      </if>
    </set>
  </select>

  <select id="findByRecommend" parameterType="java.lang.Long" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from question   where `status`=1
    <set>
      <if test="userId != null" >
        and id in(select DISTINCT followered_id from user_attention where type=0 and `status`=1 and user_id=#{userId})
      </if>
    </set>
    order by rand() limit 20
  </select>

</mapper>

